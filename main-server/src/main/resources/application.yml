spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
  config:
    import: optional:file:.env[.properties]
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: default
      password: ${REDIS_PASSWORD}
      ssl:
        enabled: false


springdoc:
  swagger-ui:
    path: /swagger-ui.html  # Swagger UI ?? ??: http://localhost:8080/swagger-ui.html
    operations-sorter: alpha
    tags-sorter: alpha
    disable-swagger-default-url: true
  api-docs:
    path: /api-docs  # OpenAPI ?? ??

docker:
  workspace-path: /app

liveblocks:
  secret-key: ${LIVEBLOCKS_SECRET_KEY}
  salt: ${LIVEBLOCKS_ROOM_SALT}

template:
  docker-username: ${TEMPLATE_DOCKER_USERNAME}

jwt:
  access:
    secret: ${JWT_SECRET}
    expiration: ${JWT_EXPIRATION}
  refresh:
    secret: ${REFRESH_SECRET}
    expiration: ${REFRESH_EXPIRATION}

# 코드 실행 관련 RabbitMQ 설정
code-execution:
  rabbitmq:
    exchange:
      name: code.execution.exchange
    queue:
      name: code.execution.queue
    routing:
      key: code.execution.routing-key

# 터미널 명령어 관련 RabbitMQ 설정
terminal-command:
  rabbitmq:
    exchange:
      name: terminal.command.exchange
    queue:
      name: terminal.command.queue
    routing:
      key: terminal.command.routing-key

# 컨테이너 할당 요청 관련 RabbitMQ 설정
container-acquire:
  rabbitmq:
    exchange:
      name: container.acquire.exchange
    queue:
      name: container.acquire.queue
    routing:
      key: container.acquire.routing-key

# 컨테이너 정리 요청 관련 RabbitMQ 설정
container-cleanup:
  rabbitmq:
    exchange:
      name: container.cleanup.exchange
    queue:
      name: container.cleanup.queue
    routing:
      key: container.cleanup.routing-key

# 컨테이너 관련 작업 응답을 위한 RabbitMQ 설정
container-response:
  rabbitmq:
    exchange:
      name: container.response.exchange
    queue:
      name:
        acquire-success: container.aq.success.queue
        acquire-failure: container.aq.failure.queue
        cleanup-success: container.cleanup.success.queue
    routing:
      key:
        acquire-success: container.acquire.success
        acquire-failure: container.acquire.failure
        cleanup-success: container.cleanup.success

# 프로젝트 삭제 요청 관련 RabbitMQ 설정
project-delete:
  rabbitmq:
    exchange:
      name: project.delete.exchange
    queue:
      name: project.delete.queue
    routing:
      key: project.delete.routing-key

# 프로젝트 관련 작업 응답을 위한 RabbitMQ 설정
project-response:
  rabbitmq:
    exchange:
      name: project.response.exchange
    queue:
      name:
        delete-success: project.delete.success.queue
    routing:
      key:
        delete-success: project.delete.success.routing-key

# 프로젝트 DB 정리 요청 관련 RabbitMQ 설정
project-db-cleanup:
  rabbitmq:
    exchange:
      name: db.cleanup.exchange
    queue:
      name: db.cleanup.queue
    routing:
      key: db.cleanup.routing-key
